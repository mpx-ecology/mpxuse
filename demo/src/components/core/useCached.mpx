<script setup lang="ts">
import { ref } from '@mpxjs/core'
import { useCached } from '@mpxjs/mpxuse-core'

interface Value {
  value: number
  extra: number
}

const value = ref<Value>({ value: 42, extra: 0 })
const comparator = (a: Value, b: Value) => a.value === b.value
const cachedValue = useCached(value, comparator)

const inputValue = ref(value.value.value)
const inputExtra = ref(value.value.extra)

const onSyncClick = () => {
  value.value = {
    value: inputValue.value,
    extra: inputExtra.value
  }
}

defineExpose({
  cachedValue,
  onSyncClick,
  inputValue,
  inputExtra,
  value
})
</script>

<template>
  <view>
    <view>
      <view>Value: {{ value.value }}</view>
      <view>Extra: {{ value.extra }}</view>
      <view>Cached Value: {{ cachedValue.value }}</view>
      <view>Cached Extra: {{ cachedValue.extra }}</view>

      <view>
        <label for="localValue">Temp Value: </label>
        <input id="localValue" wx:model="{{inputValue}}" />
      </view>
      <view>
        <label for="localExtra">Local Extra: </label>
        <input id="localExtra" wx:model="{{inputExtra}}" />
      </view>
      <view>
        <button bindtap="onSyncClick">
          Sync
        </button>
      </view>
    </view>
  </view>
</template>
